[{"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\index.js":"1","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\App.js":"2","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\reducers\\auth.js":"3","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\actions\\types.js":"4","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\actions\\auth.js":"5","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\services\\auth.service.js":"6","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\pages\\Login.js":"7","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\pages\\Home.js":"8","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\pages\\VmManagement.js":"9","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\reducers\\cloud.js":"10","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\actions\\cloud.js":"11","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\services\\cloud.service.js":"12","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\services\\auth-header.js":"13","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\components\\ui\\VmCard.js":"14","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\utilities\\Constants.js":"15","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\components\\ui\\VmList.js":"16","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\utilities\\constants.js":"17"},{"size":810,"mtime":1665179105177,"results":"18","hashOfConfig":"19"},{"size":2662,"mtime":1665214648497,"results":"20","hashOfConfig":"19"},{"size":828,"mtime":1665079959131,"results":"21","hashOfConfig":"19"},{"size":164,"mtime":1665176058970,"results":"22","hashOfConfig":"19"},{"size":1005,"mtime":1665214373665,"results":"23","hashOfConfig":"19"},{"size":555,"mtime":1665214517694,"results":"24","hashOfConfig":"19"},{"size":4180,"mtime":1665214663634,"results":"25","hashOfConfig":"19"},{"size":406,"mtime":1665214102573,"results":"26","hashOfConfig":"19"},{"size":1157,"mtime":1665213997109,"results":"27","hashOfConfig":"19"},{"size":394,"mtime":1665176458051,"results":"28","hashOfConfig":"19"},{"size":4172,"mtime":1665214302239,"results":"29","hashOfConfig":"19"},{"size":1290,"mtime":1665214524784,"results":"30","hashOfConfig":"19"},{"size":234,"mtime":1665090237200,"results":"31","hashOfConfig":"19"},{"size":3688,"mtime":1665181800370,"results":"32","hashOfConfig":"19"},{"size":2082,"mtime":1665179056172,"results":"33","hashOfConfig":"19"},{"size":381,"mtime":1665178878266,"results":"34","hashOfConfig":"19"},{"size":2084,"mtime":1665233325001,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"7pg87r",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"39"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\index.js",[],[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\App.js",["95","96"],[],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Routes, Route, Link, useLocation } from \"react-router-dom\";\nimport PCG_Image from './assets/PCG_background.png';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport 'react-notifications/lib/notifications.css';\n\nimport {NotificationContainer} from 'react-notifications'\n\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport VmManagement from \"./pages/VmManagement\";\n\nimport { logout } from './actions/auth';\n\n\nconst App = () => {\n\n  const [showVmBoard, setShowVmBoard] = useState(false);\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const logOut = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentUser) {\n      setShowVmBoard(true);\n    } else {\n      setShowVmBoard(false);\n    }\n  }, [currentUser]);\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <Link to={\"/\"} className=\"navbar-brand\">\n          Public Cloud Group App\n        </Link>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n\n          {showVmBoard && (\n            <li className=\"nav-item\">\n              <Link to={\"/vm-management\"} className=\"nav-link\">\n                Vm Management\n              </Link>\n            </li>\n          )}\n        </div>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/profile\"} className=\"nav-link\">\n                {currentUser.username}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                Log Out\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav>\n\n      <div className=\"container mt-3\" >\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/vm-management\" element={<VmManagement />} />\n        </Routes>\n      </div>\n      <NotificationContainer/>\n    </div>\n  );\n};\n\nexport default App;",[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\reducers\\auth.js",["97"],[],"import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/types\";\r\n  \r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n  const initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\actions\\types.js",[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\actions\\auth.js",[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\services\\auth.service.js",["98"],[],"import axios from \"axios\";\r\nimport Constants from \"../utilities/constants\";\r\n\r\n///List of functions that I will use to send API request with axios.\r\n\r\nconst login = async (Email, Password) => {\r\n    const response = await axios.post(Constants.AUTH_API_URL_LOGIN, {\r\n        Email,\r\n        Password\r\n    });\r\n    if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n    }\r\n    return response.data;\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport default { login, logout, };\r\n","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\pages\\Login.js",[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\pages\\Home.js",[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\pages\\VmManagement.js",[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\reducers\\cloud.js",["99"],[],"import {\r\n    FETCH_LIST\r\n  } from \"../actions/types\";\r\n    \r\n  const initialState = {\r\n    vmList: []\r\n  }\r\n    \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case FETCH_LIST:\r\n        return {\r\n          ...state,\r\n          vmList: payload.vmList,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\actions\\cloud.js",[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\services\\cloud.service.js",["100"],[],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport Constants from \"../utilities/constants\";\r\n\r\n///List of functions that I will use to send API request with axios.\r\n\r\nconst getVmList = () => {\r\n  return axios.get(Constants.CLOUD_API_URL_GET_VM_LIST, { headers: authHeader() });\r\n};\r\n\r\nconst deactivateMachine = (requestObject) => {\r\n  return axios.post(Constants.CLOUD_API_URL_STOP_SELECTED_VM, { InstanceName: requestObject.instanceName, Zone: requestObject.zone }, { headers: authHeader() });\r\n};\r\n\r\nconst activateMachine = (requestObject) => {\r\n  return axios.post(Constants.CLOUD_API_URL_START_SELECTED_VM, { InstanceName: requestObject.instanceName, Zone: requestObject.zone }, { headers: authHeader() });\r\n};\r\n\r\nconst suspendMachine = (requestObject) => {\r\n  return axios.post(Constants.CLOUD_API_URL_SUSPEND_SELECTED_VM, { InstanceName: requestObject.instanceName, Zone: requestObject.zone }, { headers: authHeader() });\r\n};\r\n\r\nconst resumeMachine = (requestObject) => {\r\n  return axios.post(Constants.CLOUD_API_URL_RESUME_SELECTED_VM, { InstanceName: requestObject.instanceName, Zone: requestObject.zone }, { headers: authHeader() });\r\n};\r\n\r\n\r\nexport default {\r\n  getVmList,\r\n  deactivateMachine,\r\n  activateMachine,\r\n  suspendMachine,\r\n  resumeMachine,\r\n};","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\services\\auth-header.js",[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\components\\ui\\VmCard.js",["101"],[],"import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activateMachine, deactivateMachine, suspendSelectedMachine, resumeSelectedMachine } from '../../actions/cloud';\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nconst VmCard = ({ singleItem }) => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  //Start or Stop the Machine.\r\n  const handleStartStop = async () => {\r\n\r\n    setLoading(true);\r\n\r\n    //If its stopped, then start the machine.\r\n    if (singleItem.status === \"TERMINATED\") {\r\n      return dispatch(activateMachine(singleItem.name, singleItem.zone)).then(() => {\r\n        setLoading(false);\r\n      })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n\r\n    //If Machine is status is started, then stop it.\r\n    return dispatch(deactivateMachine(singleItem.name, singleItem.zone)).then(() => {\r\n      setLoading(false);\r\n    })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  //Suspend or Resume the Machine.\r\n  const handleSuspendResume = async () => {\r\n\r\n    setLoading(true);\r\n\r\n    //If its SUSPENDED, then resume the machine.\r\n    if (singleItem.status === \"SUSPENDED\") {\r\n      //If Machine is status is started, then stop it.\r\n      return dispatch(resumeSelectedMachine(singleItem.name, singleItem.zone)).then(() => {\r\n        setLoading(false);\r\n      })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n\r\n    }\r\n\r\n    //MACHINE RESUMES, SUSPEND IT.\r\n    return dispatch(suspendSelectedMachine(singleItem.name, singleItem.zone)).then(() => {\r\n      setLoading(false);\r\n    })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n\r\n  }\r\n\r\n\r\n  //Returning the card as a fragment.\r\n  return (\r\n    <>\r\n      <Loading loading={loading} background=\"#2ecc71\" loaderColor=\"#3498db\" />\r\n      {/*NECESSARY CONDITIONAL STYLING */}\r\n      <div className={singleItem.status === \"TERMINATED\" ? \"card text-bg-danger mb-3\" : singleItem.status === \"SUSPENDED\" ? \"card text-bg-warning mb-3\" : \"card text-bg-success mb-3\"}>\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">\r\n            Instance Name: {singleItem.name}\r\n          </h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h5>\r\n            Status: {singleItem.status} <p></p>\r\n          </h5>\r\n          <h5>\r\n            Zone: {singleItem.zone}\r\n          </h5>\r\n          <p className=\"card-text\">\r\n            Last Started: {singleItem.lastStartTimestamp}  -  Last Stopped: {singleItem.lastStopTimestamp}\r\n          </p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <div className=\"d-grid gap-2\">\r\n            <button\r\n              className={singleItem.status === \"TERMINATED\" ? \"btn btn-success\" : \"btn btn-danger\"}\r\n              type=\"button\"\r\n              onClick={handleStartStop}\r\n            >\r\n              {singleItem.status === \"TERMINATED\" ? \"Activate\" : \"Stop\"}\r\n            </button>\r\n            {/* \r\n              Important ! \r\n              Stopped Virtual machine cannot be suspended.\r\n              Also, Resume request can be only sent for suspended machines.\r\n            \r\n            */}\r\n            {singleItem.status != \"TERMINATED\" ? <button\r\n              className={singleItem.status === \"SUSPENDED\" ? \"btn btn-success\" : \"btn btn-danger\"}\r\n              type=\"button\"\r\n              onClick={handleSuspendResume}\r\n            >\r\n              {singleItem.status === \"SUSPENDED\" ? \"Resume This Vm\" : \"Suspend This Vm\"}\r\n            </button> : null\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default VmCard;","D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\utilities\\Constants.js",[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\components\\ui\\VmList.js",[],[],"D:\\publiccloudgroup\\publiccloudgroup_web_app\\src\\utilities\\constants.js",[],[],{"ruleId":"102","severity":1,"message":"103","line":3,"column":31,"nodeType":"104","messageId":"105","endLine":3,"endColumn":42},{"ruleId":"102","severity":1,"message":"106","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":13,"column":3,"nodeType":"109","endLine":38,"endColumn":4},{"ruleId":"107","severity":1,"message":"110","line":21,"column":1,"nodeType":"109","endLine":21,"endColumn":35},{"ruleId":"107","severity":1,"message":"108","line":9,"column":3,"nodeType":"109","endLine":20,"endColumn":4},{"ruleId":"107","severity":1,"message":"110","line":28,"column":1,"nodeType":"109","endLine":34,"endColumn":3},{"ruleId":"111","severity":1,"message":"112","line":100,"column":32,"nodeType":"113","messageId":"114","endLine":100,"endColumn":34},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'PCG_Image' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]