{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_MESSAGE } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nexport const login = (email, password) => dispatch => {\n  return AuthService.login(email, password).then(data => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        user: data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    console.log(error);\n    const message = error.response && error.response.data;\n    error.toString();\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const logout = () => dispatch => {\n  AuthService.logout();\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","AuthService","login","email","password","dispatch","then","data","type","payload","user","Promise","resolve","error","console","log","message","response","toString","reject","logout"],"sources":["D:/publiccloudgroup/publiccloudgroup_web_app/src/actions/auth.js"],"sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const login = (email, password) => (dispatch) => {\r\n    return AuthService.login(email, password).then(\r\n        (data) => {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: { user: data },\r\n            });\r\n\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n            const message =\r\n                (error.response &&\r\n                    error.response.data)\r\n                error.toString();\r\n\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: message,\r\n            });\r\n\r\n            return Promise.reject();\r\n        }\r\n    );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    AuthService.logout();\r\n\r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n};"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,MALJ,EAMIC,WANJ,QAOO,SAPP;AASA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAsBC,QAAD,IAAc;EACpD,OAAOJ,WAAW,CAACC,KAAZ,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCE,IAAnC,CACFC,IAAD,IAAU;IACNF,QAAQ,CAAC;MACLG,IAAI,EAAEX,aADD;MAELY,OAAO,EAAE;QAAEC,IAAI,EAAEH;MAAR;IAFJ,CAAD,CAAR;IAKA,OAAOI,OAAO,CAACC,OAAR,EAAP;EACH,CARE,EASFC,KAAD,IAAW;IACPC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,MAAMG,OAAO,GACRH,KAAK,CAACI,QAAN,IACGJ,KAAK,CAACI,QAAN,CAAeV,IAFvB;IAGIM,KAAK,CAACK,QAAN;IAEJb,QAAQ,CAAC;MACLG,IAAI,EAAEV;IADD,CAAD,CAAR;IAIAO,QAAQ,CAAC;MACLG,IAAI,EAAER,WADD;MAELS,OAAO,EAAEO;IAFJ,CAAD,CAAR;IAKA,OAAOL,OAAO,CAACQ,MAAR,EAAP;EACH,CA1BE,CAAP;AA4BH,CA7BM;AA+BP,OAAO,MAAMC,MAAM,GAAG,MAAOf,QAAD,IAAc;EACtCJ,WAAW,CAACmB,MAAZ;EAEAf,QAAQ,CAAC;IACLG,IAAI,EAAET;EADD,CAAD,CAAR;AAGH,CANM"},"metadata":{},"sourceType":"module"}